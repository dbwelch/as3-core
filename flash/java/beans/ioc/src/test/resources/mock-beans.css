constants {
	constant-class: class( flash.display.Sprite );
	red: #ff0000;
	string: hello world;
	stylable: ref( stylable );
}

expressions {
	class-expression: class( flash.display.Sprite );
	url-expression: url( http://google.com );
	red: constant( red );
	constant-class: constant( constant-class );
}

arrays {
	values: array( constant( red ), constant( string ), constant( stylable ) );
}

stylable {
	singleton: true;
	instance-class: class( flash.display.Sprite );
}

bevel {
	instance-class: class( flash.filters.BevelFilter );
	distance: 1;
	highlight-color: #ff0000;
	shadow-color: #666666;
	shadow-alpha: 0.6;
	knockout: true;
	blur-x: 5;
	blur-y: 10;
	strength: 20;
}

di-dependencies {
	property-bitmap: img( assets/mock-di-image.jpg );
	property-sound: sound( assets/mock-di-sound.mp3 );
	property-movie: swf( assets/mock-di-movie.swf );
	property-xml: xml( assets/mock-di-xml.xml );
	property-text: text( assets/mock-di-text.txt );
	property-font: font( assets/mock-di-fonts.swf );
	property-messages: messages( assets/mock-di-messages.properties );
	property-settings: settings( assets/mock-di-settings.properties );
	property-import: import( assets/mock-import-beans.css );
}

bean-dependencies {
	instance-class: class( org.flashx.ioc.mock.MockFileLoaderBean );
	file-policy: bean;
	property-bitmap: img( assets/mock-di-image.jpg );
	property-sound: sound( assets/mock-di-sound.mp3 );
	property-movie: swf( assets/mock-di-movie.swf );
	property-xml: xml( assets/mock-di-xml.xml );
	property-text: text( assets/mock-di-text.txt );
	property-font: font( assets/mock-di-fonts.swf );
	property-messages: messages( assets/mock-di-messages.properties );
	property-settings: settings( assets/mock-di-settings.properties );
	property-import: import( assets/mock-import-beans.css );	
}